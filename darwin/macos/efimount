#!/bin/sh

# echoval function to print and eval a shell cmd
echoval()
{
	local cmd="$1"
	local msg="=> $cmd"

	if [ -t 1 ] && echo "$TERM" | grep xterm >/dev/null 2>&1
	then
		printf '\033[1;39m%s\033[0;39m\n' "$msg"
	else
		echo "$msg"
	fi

	eval "$cmd"
}

cleanAndUnmount()
{
	dotFilesCleanup "$1"
	diskutil unmount "$1" || diskutil unmount force "$1"
}

# Run on macOS check
[ $(uname) = Darwin ] || { echo 'Not running macOS/OS X' >&2; exit 1; }

# Unmount Non-Interactive
if [ "$1" = 'umnt' -o "$1" = '-u' ]
then
	[ -d /Volumes/ESP ] || { echo '/Volumes/ESP does not exist!' >&2; exit 1; }
	echoval 'cleanAndUnmount /Volumes/ESP'
	exit
fi

# Args Pre
noopen=0
if [ "$1" = '-n' ]
then
	noopen=1
	shift
fi

# Create MP
if [ -d /Volumes/ESP ]
then
	read -p 'There is already a "ESP" folder! Now what? (rm/use/open/umnt) ' ans
	case "$ans" in
		rm )
			sudo rm -rf /Volumes/ESP
			;;
		umnt )
			cleanAndUnmount /Volumes/ESP
			exit
			;;
	esac
fi
[ -d /Volumes/ESP ] || echoval 'sudo mkdir /Volumes/ESP'

# Mount
if [ "$ans" != open ]
then
	partOfWhole=$(diskutil info / | sed -n 's/^ *Part of Whole\: *//p')
	physicalStore=$(diskutil list "$partOfWhole" | sed -n 's/^.*Physical Store \([a-z0-9]*\).*$/\1/gp')

	if [ -z "$1" ]
	then
		devNode='/dev/disk0s1'
		if [ ! -z "$partOfWhole" -a -z "$physicalStore" ]
		then
			devNode="/dev/${partOfWhole}s1"
		elif [ ! -z "$partOfWhole" ]
		then
			physicalWhole=$(diskutil info "$physicalStore" | sed -n 's/^ *Part of Whole\: *//p')
			[ -z "$physicalWhole" ] || devNode="/dev/${physicalWhole}s1"
		fi
	else
		devNode="$1"
	fi

	if [ ! -b "$devNode" ]
	then
		echo "$devNode is not a valid blockdevice" >&2
		exit 1
	fi
	echoval "sudo mount_msdos '$devNode' /Volumes/ESP"
fi

# Open 1/2
openESP=n
if [ $noopen -eq 0 ]
then
	read -p 'Open /Volumes/ESP (y/n) ' openESP
fi

# Open 2/2
if [ "$openESP" = y -o "$openESP" = Y ]
then
	open /Volumes/ESP
else
	echo 'Contents of /Volumes/ESP:'
	ls -lhFG /Volumes/ESP
	exit 0
fi
