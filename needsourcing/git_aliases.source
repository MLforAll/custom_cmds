#!/bin/bash

alias gcl='git clone'
alias gca='git commit --amend'

alias gba='git branch -a'

alias gbd='git branch -d'
make-completion-wrapper __git_wrap__git_main __git_wrap__git_branch_delete git branch delete -d
complete -o bashdefault -o default -o nospace -F __git_wrap__git_branch_delete gbd

alias gbdd='git branch -D'
make-completion-wrapper __git_wrap__git_main __git_wrap__git_branch_force_delete git branch delete -D
complete -o bashdefault -o default -o nospace -F __git_wrap__git_branch_force_delete gbdd

alias glog='git log'
alias gst='git status'

alias gp='git push'
alias gl='git pull'

gurl()
{
	(
		if [ -d "$1" ]
		then
			cd "$1" >/dev/null || exit $?
			shift
		fi

		r="$1"; [ ! -z "$r" ] || r=origin
		git remote get-url "$r"
	)
}

alias grst='git reset'
make-completion-wrapper __git_wrap__git_main __git_wrap__git_reset git reset
complete -o bashdefault -o default -o nospace -F __git_wrap__git_reset grst

alias grsth='grst --hard'
make-completion-wrapper __git_wrap__git_main __git_wrap__git_reset_hard git reset --hard
complete -o bashdefault -o default -o nospace -F __git_wrap__git_reset_hard grsth

gbupd()
{
	local remote=origin
	if [ ! -z "$1" ]
	then
		remote="$1"
		shift
	fi

	git remote update "$remote" --prune "$@"
}

git-current-branch() {

	local ref=$(git symbolic-ref --quiet HEAD 2> /dev/null) 
	local ret=$?

	if [ $ret -ne 0 ]
	then
		[ $ret -ne 128 ] || return 0
		ref=$(git rev-parse --short HEAD 2> /dev/null)  || return
	fi

	echo ${ref#refs/heads/}
}

alias gpsup='git push --set-upstream origin $(git-current-branch)'

git-creation-date() {
	git log --follow --format=%aD "$1" | tail -1
}
